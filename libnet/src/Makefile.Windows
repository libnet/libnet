#
# A GNU Makefile for libnet targeting MingW32 + MSVC.
#
#  by G. Vanem <gvanem@yahoo.no>, Jan 2012
#
# Change paths to suite your setup.
# This makefile install to $(MINGW32)-root by default. Change to
# whatever you like if you don't have MingW.
# E.g. Use 'INSTALL_ROOT = $(realpath $(VCINSTALLDIR))' if you only
#      have MSVC.
#
PCAP_ROOT    = ../../../libpcap
WINPCAP_ROOT = ../../../libpcap/WinPcap
INSTALL_ROOT = $(realpath $(MINGW32))

ifeq ($(CC),gcc)
  OBJ_DIR = MingW32_obj
  O       = o
  CFLAGS  = -Wall -O2 -g
  RC_HOST = MingW
else
  OBJ_DIR = MSVC_obj
  O       = obj
  CFLAGS  = -nologo -MD -W2 -O2 -Zi
  RC_HOST = MSVC
endif

CFLAGS += -I../include -I$(PCAP_ROOT) -I$(PCAP_ROOT)/Win32/Include \
          -I$(WINPCAP_ROOT)/Include -DWIN32 -D_WIN32 -DWIN32_LEAN_AND_MEAN \
          -D_WIN32_WINNT=0x501

#
# The header mess under '../win32/' is NOT used. I.e. it contains an old
# libnet.h. Since this makefile genererates an libnet.def file, there is
# no point in defining 'LIBNET_API __declspec(dllexport)'.
#
CFLAGS += -DLIBNET_API=

DATE_STAMP = $(shell date +%d-%B-%Y)

VER_MAJOR  = 1
VER_MINOR  = 2
VER_MICRO  = 0
VERSION    = $(VER_MAJOR).$(VER_MINOR).$(VER_MICRO)
RC_VERSION = $(VER_MAJOR),$(VER_MINOR),$(VER_MICRO),0

SOURCES = $(strip                                                              \
          libnet_advanced.c     libnet_asn1.c        libnet_build_802.1q.c     \
          libnet_build_802.1x.c libnet_build_802.2.c libnet_build_802.3.c      \
          libnet_build_arp.c    libnet_build_cdp.c   libnet_build_data.c       \
          libnet_build_dhcp.c   libnet_build_dns.c   libnet_build_ethernet.c   \
          libnet_build_icmp.c   libnet_build_igmp.c  libnet_build_ip.c         \
          libnet_build_isl.c    libnet_build_ntp.c   libnet_build_ospf.c       \
          libnet_build_rip.c    libnet_build_snmp.c  libnet_build_stp.c        \
          libnet_build_tcp.c    libnet_build_udp.c   libnet_build_vrrp.c       \
          libnet_build_mpls.c   libnet_build_rpc.c   libnet_build_ipsec.c      \
          libnet_internal.c     libnet_build_bgp.c   libnet_build_gre.c        \
          libnet_build_link.c   libnet_build_fddi.c  libnet_build_token_ring.c \
          libnet_build_sebek.c  libnet_checksum.c    libnet_crc.c              \
          libnet_if_addr.c      libnet_init.c        libnet_link_win32.c       \
          libnet_pblock.c       libnet_port_list.c   libnet_prand.c            \
          libnet_raw.c          libnet_resolve.c     libnet_write.c            \
          libnet_cq.c           libnet_error.c       libnet_version.c)

OBJECTS = $(addprefix $(OBJ_DIR)/, $(notdir $(SOURCES:.c=.$(O))))

THIS_FILE = $(firstword $(MAKEFILE_LIST))

#
# Use static-libs wherever we can to avoid a potential DLL hell.
#
ifeq ($(CC),gcc)
  TARGETS  = libnet.a libnet.dll.a libnet.dll
  LDFLAGS  = -s
  EXT_LIBS = $(PCAP_ROOT)/libwpcap.a $(WINPCAP_ROOT)/lib/libpacket.a \
             -lws2_32 -ladvapi32 -liphlpapi -lversion

else
  TARGETS  = libnet.lib libnet_imp.lib libnet.dll
  LDFLAGS  = -incremental:no -debug
  EXT_LIBS = $(PCAP_ROOT)/wpcap.lib $(WINPCAP_ROOT)/lib/packet.lib \
             ws2_32.lib advapi32.lib iphlpapi.lib version.lib
endif

GENERATED = config.h ../include/libnet.h libnet.rc

#
# MSVC: This gets copied from '../win32/' into '../include/libnet/'
#       at the 'depend' or 'all' stage.
#       DO NOT add '../win32' to the '-I'-path (it causes only a mess).
#
ifeq ($(CC),cl)
  GENERATED += ../include/libnet/stdint.h

../include/libnet/stdint.h: ../win32/stdint.h
	cp --update $^ $@
endif

####### FILE GENERATE MACRO ###################
#
# $(1): the comment start.
# $(2): the file to write to.
#
define generate_file
	@echo 'Generating $(2) ...'
	@echo "$(1) $(strip $(2)) for MingW/MSVC."           > $(2)
	@echo "$(1) Generated by $(realpath $(THIS_FILE))." >> $(2)
	@echo "$(1) DO NOT EDIT."                           >> $(2)
	@echo "$(1)"                                        >> $(2)
endef

####### LINK MACRO (DLL + imp-lib) #############
#
# arg1, $(1): The name of the produced DLL.
# arg2, $(2): The name of the import lib.
# arg3, $(3): The rest of the link arguments.
#
ifeq ($(CC),cl)
define link_DLL
	@echo 'Building $(1)'
	link $(LDFLAGS) -verbose -dll -out:$(strip $(1)) -implib:$(strip $(2)) \
	     -pdb:$(basename $(1)).pdb $(3) > tmp.map
	cat tmp.map >> $(basename $(1)).map
	rm -f tmp.map $(basename $(2)).exp
	touch $(2)
	@echo
endef
else
define link_DLL
	@echo 'Building $(1)'
	$(CC) $(LDFLAGS) -shared -o $(1) -Wl,--out-implib,$(strip $(2)) $(3) > $(basename $(1)).map
	touch $(2)
	@echo
endef
endif

########################################################################

all: check_cc prelude $(GENERATED) $(OBJ_DIR) $(TARGETS) postlude

check_cc:
ifneq ($(CC),gcc)
  ifneq ($(CC),cl)
    $(error "Usage: make -f $(THIS_FILE) CC=[gcc|cl].")
  endif
endif

prelude:
	@echo 'Building libnet ver. "$(VERSION)" for "CC=$(CC)" ...'

postlude:
	@echo '$$(TARGETS): $(TARGETS) done. Do a "make CC=$(CC) -f $(THIS_FILE) install" at own risk.'


#
# config.h should NOT be generated into '../include/libnet'.
# That could have havoc for programs using libnet.
#
config.h: $(THIS_FILE)
	$(call generate_file, //, $@)
	@echo '#ifndef __WIN32__'                            >> $@
	@echo '#define __WIN32__ 1'                          >> $@
	@echo '#endif'                                       >> $@
	@echo ''                                             >> $@
	@echo '#ifndef OID_802_5_CURRENT_ADDRESS'            >> $@
	@echo '#define OID_802_5_CURRENT_ADDRESS 0x02010102' >> $@
	@echo '#endif'                                       >> $@
	@echo ''                                             >> $@
	@echo '#define srandom(seed) srand(seed)'            >> $@

../include/libnet.h: ../include/libnet.h.in
	sed -e 's/@PACKAGE_VERSION@/$(VERSION)/'  \
	    -e 's/@ENDIANESS@/LIBNET_LIL_ENDIAN/' < $^ > $@

install: install_$(CC) install_h

install_gcc: $(TARGETS)
	cp --update libnet.a libnet.dll.a $(INSTALL_ROOT)/lib
	cp --update libnet.dll            $(INSTALL_ROOT)/bin

install_cl: $(TARGETS)
	cp --update libnet.lib libnet_imp.lib $(INSTALL_ROOT)/lib
	cp --update libnet.dll                $(INSTALL_ROOT)/bin

#
# For CC=cl, the ../include/libnet/*.h includes stdint.h.
# DO NOT install this for CC=gcc since MingW already got it.
# So do a 'make vclean' before changing $(CC).
#
install_h: ../include/libnet.h
	-mkdir --parents                  $(INSTALL_ROOT)/include/libnet
	cp --update ../include/libnet/*.h $(INSTALL_ROOT)/include/libnet
	cp --update ../include/libnet.h   $(INSTALL_ROOT)/include

$(OBJ_DIR):
	mkdir $@

libnet.a: $(OBJECTS)
	rm -f $@
	ar rs $@ $^
	@echo

libnet.lib: $(OBJECTS)
	rm -f $@
	lib -nologo -out:$@ $(OBJECTS)
	@echo

libnet.dll.a libnet.dll: $(OBJECTS) $(OBJ_DIR)/libnet.def $(OBJ_DIR)/libnet.res
	$(call link_DLL, libnet.dll, libnet.dll.a, $(OBJECTS) $(OBJ_DIR)/libnet.res $(EXT_LIBS))

libnet_imp.lib libnet.dll: $(OBJECTS) $(OBJ_DIR)/libnet.def $(OBJ_DIR)/libnet.res
	$(call link_DLL, libnet.dll, libnet_imp.lib, -def:$(OBJ_DIR)/libnet.def \
                     $(OBJECTS) $(OBJ_DIR)/libnet.res $(EXT_LIBS))

$(OBJ_DIR)/libnet.res: libnet.rc
ifeq ($(CC),gcc)
	windres -O COFF -o $@ $<
else
	rc -nologo -Fo./$@ $<
endif
	@echo

$(OBJ_DIR)/libnet.def: $(OBJECTS) $(THIS_FILE)
	$(call generate_file, ;, $@)
	@echo 'LIBRARY libnet.dll'     >> $@
	@echo 'EXPORTS'                >> $@
	@echo '  in6addr_error DATA'   >> $@
	nm $(OBJECTS) | grep ' T .*_libnet_' | sed 's/^.* _/  /' >> $@


define LIBNET_RC
  #include <winver.h>

  VS_VERSION_INFO VERSIONINFO
    FILEVERSION    $(RC_VERSION)
    PRODUCTVERSION $(RC_VERSION)
    FILEFLAGSMASK  0x3fL
    FILEOS         VOS__WINDOWS32
    FILETYPE       VFT_DLL
    FILESUBTYPE    VFT2_DRV_NETWORK
    FILEFLAGS      0
  BEGIN
    BLOCK "StringFileInfo"
    BEGIN
      BLOCK "040904b0"
      BEGIN
        VALUE "CompanyName",      "https://github.com/gvanem/libnet"
        VALUE "FileDescription",  "Library for portable packet creation and injection."
        VALUE "FileVersion",      "$(RC_VERSION) ($(RC_HOST))"
        VALUE "InternalName",     "libnet"
        VALUE "LegalCopyright",   ""
        VALUE "LegalTrademarks",  ""
        VALUE "OriginalFilename", "libnet.dll"
        VALUE "ProductName",      "LibNet"
        VALUE "ProductVersion",   "$(RC_VERSION) ($(RC_HOST))"
        VALUE "PrivateBuild",     "The privat build of <gvanem@yahoo.no>."
        VALUE "SpecialBuild",     "Built on $(DATE_STAMP)"
      END
    END
  BLOCK "VarFileInfo"
  BEGIN
    VALUE "Translation", 0x409, 1200
  END
  END
endef

export LIBNET_RC

libnet.rc: $(THIS_FILE)
	$(call generate_file, //, $@)
	@echo "$$LIBNET_RC" >> $@

$(OBJ_DIR)/%.o: %.c
	$(CC) $(CFLAGS) -o $@ -c $<
	@echo

$(OBJ_DIR)/%.obj: %.c
	$(CC) -c $(CFLAGS) -Fo./$@ $<
	@echo

clean: clean_$(CC)
	rm -f $(OBJ_DIR)/*

clean_gcc: ;

clean_cl:
	rm -f vc*.pdb

vclean realclean: clean
	rm -f $(TARGETS)  $(GENERATED) libnet.map .depend.Windows
	- rmdir $(OBJ_DIR)

REPLACE = sed -e 's/\(.*\)\.o: /\n$$(OBJ_DIR)\/\1.$$(O): /'

depend: $(GENERATED)
	gcc -MM -D_MSC_VER $(filter -D% -I%, $(CFLAGS)) $(SOURCES) | $(REPLACE) > .depend.Windows

-include .depend.Windows


